# Hassle: The ability to expose services under a path, instead of a subdomain varies greatly between
# the different services. Grafana supports this use-case very nicely, while kubernetes-dashboard does
# not at all. For the sake of consistency, we just using subdomains for all of them.
---
apiVersion: getambassador.io/v3alpha1
kind: Mapping
metadata:
  name: weave-gitops-dashboard
  namespace: ingress
spec:
  hostname: "gitops.loom-lang.dev"
  prefix: /
  service: weave-gitops-dashboard.flux-system:9001
---
apiVersion: getambassador.io/v3alpha1
kind: Mapping
metadata:
  name: kubernetes-dashboard
  namespace: ingress
spec:
  hostname: "k8s.loom-lang.dev"
  prefix: /
  service: kubernetes-dashboard.kubernetes-dashboard:9090
---
apiVersion: getambassador.io/v3alpha1
kind: Mapping
metadata:
  name: linkerd-dashboard
  namespace: ingress
spec:
  hostname: "linkerd.loom-lang.dev"
  prefix: /
  # By default, linkerd does not want us to expose its dashboard, so we rewrite it
  # See: https://linkerd.io/2.14/tasks/exposing-dashboard/
  host_rewrite: web.linkerd-viz.svc.cluster.local:8084
  service: web.linkerd-viz:8084
---
apiVersion: getambassador.io/v3alpha1
kind: Mapping
metadata:
  name: signoz-dashboard
  namespace: ingress
spec:
  hostname: "signoz.loom-lang.dev"
  prefix: /
  service: signoz-frontend.signoz:3301
---
apiVersion: getambassador.io/v3alpha1
kind: Mapping
metadata:
  name: hubble-api
  namespace: ingress
spec:
  hostname: "hubble.loom-lang.dev"
  prefix: /api/
  rewrite: /api/
  # Hassle: Hubble UI is using HTTP streaming to get network flow updates to the UI.
  # The automatic timeout kills this connection, leading to a broken UI and reconnect
  # attempts every few seconds.
  timeout_ms: 0
  service: hubble-ui.kube-system:80
---
apiVersion: getambassador.io/v3alpha1
kind: Mapping
metadata:
  name: hubble
  namespace: ingress
spec:
  hostname: "hubble.loom-lang.dev"
  prefix: /
  service: hubble-ui.kube-system:80
